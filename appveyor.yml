environment:
  global:
    BZIP2_VER: 1.0.6
    EXPAT_VER: 2.2.5
    PROJ4_VER: 4.9.3
    ZLIB_VER: 1.2.11
    LUA_VER: 5.3.4
    LUA_INCLUDE_DIR: C:\lua\include
    LUA_LIBRARIES: C:\lua\lua53.lib
    LUA_DLL: C:\lua\lua53.dll
    WINGETOPT_VER: v0.95
    GETOPT_INCLUDE_DIR: C:\wingetopt\src
    GETOPT_LIBRARY: C:\wingetopt\build\wingetopt.lib
    BOOST_PATH: C:\Libraries\boost_1_63_0
    POSTGRESQL_VER: 9.6.6
    TESTS_POSTGRESQL_ROOT: C:\Progra~1\PostgreSQL\9.6
    POSTGIS_VER: 2.4.2
    POSTGIS_URL: "https://lonvia.dev.openstreetmap.org/osm2pgsql-winbuild/postgis-bundle-pg96-2.4.3x64.zip"
    PGUSER: postgres
    PGPASSWORD: Password12!
  matrix:
    - platform: x86
    - platform: x64

os: Visual Studio 2015

services:
  - postgresql96

clone_folder: c:\osm2pgsql

clone_depth: 1

init:
  - git config --global core.autocrlf input
  - if [%platform%]==[x86] (
        set VCVARSALL_ARG=x86
    ) else (
        set VCVARSALL_ARG=amd64
    )
  - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall" %VCVARSALL_ARG%'

install:
  - cd c:\
  - if [%platform%]==[x86] (
        set CONDA_PATH=C:\Miniconda36\Scripts
    ) else (
        set CONDA_PATH=C:\Miniconda36-x64\Scripts
    )
  - set PATH=%TESTS_POSTGRESQL_ROOt%\bin;%PATH%;%CONDA_PATH%
  - set LUA_URL=https://lonvia.dev.openstreetmap.org/osm2pgsql-winbuild/lua_%platform%.zip
  - conda config --set always_yes yes
  - conda create --name osm2pgsql
  - activate osm2pgsql
  - conda install bzip2=%BZIP2_VER% expat=%EXPAT_VER% proj4=%PROJ4_VER% zlib=%ZLIB_VER% postgresql=%POSTGRESQL_VER%
  - ps: if (!(Test-Path "C:\lua_$env:platform.zip")){(new-object net.webclient).DownloadFile($env:LUA_URL, "C:\lua_$env:platform.zip")}
  - 7z x -y C:\lua_%platform%.zip -oC:\lua
  - ps: if (!(Test-Path "C:\postgis.zip")){(new-object net.webclient).DownloadFile($env:POSTGIS_URL, "C:\postgis.zip")}
  - 7z x C:\postgis.zip -oC:\postgis
  - xcopy /e /y /q C:\postgis\postgis-bundle-pg96-2.4.3x64 %TESTS_POSTGRESQL_ROOT%
  - git clone https://github.com/alex85k/wingetopt -b %WINGETOPT_VER% C:\wingetopt
  - python -V
  - pip install psycopg2

before_build:
  - cd C:\wingetopt
  - mkdir build
  - cd build
  - cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=%build_type%
  - nmake

build_script:
  - mkdir c:\osm2pgsql\build
  - cd c:\osm2pgsql\build
  - >
    cmake .. -LA -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=%build_type% -DBUILD_TESTS=ON
    -DLUA_INCLUDE_DIR=%LUA_INCLUDE_DIR% -DLUA_LIBRARIES=%LUA_LIBRARIES% 
    -DGETOPT_INCLUDE_DIR=%GETOPT_INCLUDE_DIR% -DGETOPT_LIBRARY=%GETOPT_LIBRARY%
    -DBOOST_ROOT=%BOOST_PATH% -DBoost_USE_STATIC_LIBS=ON
  - nmake

after_build:
  - mkdir osm2pgsql-bin
  - if [%platform%]==[x86] (
        set CONDA_LIBRARY_PATH=C:\Miniconda36\envs\osm2pgsql\Library
    ) else (
        set CONDA_LIBRARY_PATH=C:\Miniconda36-x64\envs\osm2pgsql\Library
    )
  - copy /y *.exe osm2pgsql-bin
  - copy /y ..\*.style osm2pgsql-bin
  - copy /y ..\*.lua osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\libpq.dll osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\libeay32.dll osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\ssleay32.dll osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\zlib.dll osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\expat.dll osm2pgsql-bin
  - copy /y %CONDA_LIBRARY_PATH%\bin\libbz2.dll osm2pgsql-bin
  - copy /y %LUA_DLL% osm2pgsql-bin
  - 7z a c:\osm2pgsql\osm2pgsql_%build_type%_%platform%.zip osm2pgsql-bin -tzip

before_test:
  - cd c:\
  - mkdir temp
  - cacls temp /T /E /G Users:F
  - cacls temp /T /E /G "Network Service":F
  - |
    psql -c "CREATE TABLESPACE tablespacetest LOCATION 'c:/temp'"
  - set PATH=c:\osm2pgsql\build\osm2pgsql-bin;%PATH%
  - if [%platform%]==[x86] (
        set PROJ_LIB=C:\Miniconda36\envs\osm2pgsql\Library\share
    ) else (
        set PROJ_LIB=C:\Miniconda36-x64\envs\osm2pgsql\Library\share
    )

test_script:
  - cd c:\osm2pgsql\build
  #- ctest -VV -L NoDB
  - ctest -VV -LE FlatNodes # enable when Postgis will be available

artifacts:
  - path: osm2pgsql_%build_type%_%platform%.zip

cache:
  - C:\lua_%platform%.zip -> appveyor.yml
  - C:\postgis.zip -> appveyor.yml
